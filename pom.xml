<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.giophub</groupId>
    <artifactId>xml-http-client</artifactId>
    <packaging>jar</packaging> <!-- todo : change to war or something else -->
    <version>0.0.1</version>
    <name>${project.artifactId}</name>
    <description>xml http client</description>

    <!-- PROPERTIES -->
    <properties>
        <java.version>1.8</java.version>
        <spring.version>5.0.5.RELEASE</spring.version>

        <!-- build default settings -->
        <!--<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>-->
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
        <Implementation-Build>${buildNumber}</Implementation-Build>
        <build.name>${project.name}_${profile.env}_${project.version}-${buildNumber}_${timestamp}</build.name>
    </properties>


    <!-- DEPENDENCIES -->
    <dependencies>

        <!-- SOURCE LIBRARIES -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <!-- Apache commons : HTTP Client -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.1</version>
        </dependency>


        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.4</version>
        </dependency>
        <!-- Binding for logBack -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <!-- Anything using commons-logging should defer to slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.4</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- COMMONS -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.0.1</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>


        <!-- TESTING LIBRARIES -->

        <!-- JUNIT -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>


        <!-- SPOCK FRAMEWORK DEPENDENCIES -->
        <!-- Versions of the following dependencies should be omitted if using
        spring-boot-starter-parent -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>1.0-groovy-2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.4.6</version>
        </dependency>
        <dependency> <!-- to testing RESTClient -->
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>groovy</artifactId>
                    <groupId>org.codehaus.groovy</groupId>
                </exclusion>
            </exclusions>
            <version>0.5.2</version>
        </dependency>
        <!-- end SPOCK FRAMEWORK DEPENDENCIES -->
    </dependencies>


    <!-- BUILD -->
    <build>
        <!-- fileName: myProject-DEV-0.8.5-3d93da79ab56b75d-20180604 -->
        <finalName>${build.name}</finalName>

        <sourceDirectory>src/main/java/</sourceDirectory>
        <resources>
            <!--<resource>
                <directory>src/main/resources/properties</directory>
                <filtering>true</filtering>
            </resource>-->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>buildnumber</id>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--<format>{0}-{1}</format>-->
                    <format>{0}</format>
                    <items>
                        <item>scmVersion</item>
                        <item>buildNumber</item>
                    </items>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <revisionOnScmFailure>no-scm-rev</revisionOnScmFailure>
                    <shortRevisionLength>16</shortRevisionLength>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <warSourceDirectory>WebContent</warSourceDirectory>
                    <webResources>
                        <webResource>
                            <directory>jsonpages</directory>
                            <filtering>true</filtering>
                        </webResource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- SPOCK FRAMEWORK PLUGINS -->
                <plugin>
                    <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
                    visit https://github.com/groovy/GMavenPlus/wiki -->
                    <groupId>org.codehaus.gmavenplus</groupId>
                    <artifactId>gmavenplus-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Optional plugins for using Spock -->
                <!-- Only required if names of spec classes don't match default Surefire patterns (`*Test` etc.) -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <useFile>false</useFile>
                        <includes>
                            <include>**/*Spec.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <!-- END SPOCK FRAMEWORK PLUGINS -->
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- LocalHost Dev Env -->
        <profile>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <id>MyProject-LocalHost</id>
            <properties>
                <!-- @Override the ${build.name} property -->
                <!--<build.name>${project.name}-${profile.env}-${project.version}</build.name>-->

                <!-- deployment settings -->
                <profile.env>LOCALHOST</profile.env>
                <profile.domain>MyProject-LocalHost</profile.domain>

                <!-- testing.json settings -->
                <profile.id>${profile.domain}</profile.id>
                <profile.target>ESTAT DISSCHAIN ${profile.env}</profile.target>

                <!-- log settings -->
                <log.directory.val>${project.basedir}/_logs</log.directory.val>
                <log.level.val>DEBUG</log.level.val>
                <log.max.index.val>200</log.max.index.val>
                <log.max.size.val>5MB</log.max.size.val>
            </properties>
        </profile>
    </profiles>

    <scm>
        <url>https://github.com/giophub/maven-kickstart.git</url>
        <connection>scm:git:${scm.url}</connection>
        <developerConnection>${scm.connection}</developerConnection>
    </scm>
</project>
